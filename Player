using System.Collections;
using UnityEngine;

public class Player : MonoBehaviour
{
    public float walkSpeed = 5;
    public float runSpeed = 10;
    public float analogWalkThreshold = 0.5f;
    public GameObject deathParticleEffect;  // Part√≠cula de morte
    public Transform respawnPoint;  // Ponto de respawn

    private bool facingRight = true;
    private bool isRunning = false;
    private Animator anim;

    private void Awake()
    {
        anim = GetComponent<Animator>();
    }

    void Update()
    {
        float h = Input.GetAxis("Horizontal");
        float analogMagnitude = Mathf.Abs(h);

        isRunning = analogMagnitude > analogWalkThreshold;
        float speed = isRunning ? runSpeed : walkSpeed;

        transform.Translate(Vector2.right * h * speed * Time.deltaTime);

        if (facingRight && h < 0)
        {
            Flip();
        }
        else if (!facingRight && h > 0)
        {
            Flip();
        }

        anim.SetFloat("Speed", Mathf.Abs(h));
        anim.SetBool("isRunning", isRunning);
        anim.SetBool("isWalking", !isRunning);
    }

    void Flip()
    {
        facingRight = !facingRight;
        Vector3 scale = transform.localScale;
        scale.x *= -1;
        transform.localScale = scale;
    }

    public void DieAndRespawn()
    {
        
        Instantiate(deathParticleEffect, transform.position, Quaternion.identity);

        
        gameObject.SetActive(false);

       
        StartCoroutine(Respawn());
    }

    private IEnumerator Respawn()
    {
        yield return new WaitForSeconds(1);

       
        transform.position = respawnPoint.position;

       
        gameObject.SetActive(true);

        
        GameManager.Instance.RefreshScreen();
    }

    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.CompareTag("Enemy"))
        {
            GameManager.Instance.LoseLife(1);
        }
    }
}
